{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.255.40792",
      "templateHash": "5812265689397518116"
    }
  },
  "parameters": {
    "prefix": {
      "type": "string",
      "defaultValue": "chgeuer2"
    },
    "livebookPassword": {
      "type": "secureString",
      "defaultValue": "Secret123gyJFgny8",
      "minLength": 12
    }
  },
  "functions": [],
  "variables": {
    "containerConfig": {
      "image": "livebook/livebook",
      "shareNames": {
        "mixcache": "mixcache",
        "data": "data"
      },
      "mountPoints": {
        "mixcache": "/mixcache",
        "data": "/data"
      },
      "livebookPort": 80
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2020-08-01-preview",
      "name": "[format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().name))]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2"
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2021-02-01",
      "name": "[format('{0}/default/{1}', format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().name)), variables('containerConfig').shareNames.mixcache)]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().name)))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2021-02-01",
      "name": "[format('{0}/default/{1}', format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().name)), variables('containerConfig').shareNames.data)]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().name)))]"
      ]
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2019-12-01",
      "name": "[format('{0}-group', parameters('prefix'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "osType": "Linux",
        "restartPolicy": "OnFailure",
        "containers": [
          {
            "name": "livebook",
            "properties": {
              "image": "[variables('containerConfig').image]",
              "environmentVariables": [
                {
                  "name": "LIVEBOOK_PASSWORD",
                  "value": "[parameters('livebookPassword')]"
                },
                {
                  "name": "LIVEBOOK_COOKIE",
                  "value": "[uniqueString(format('{0}{1}', parameters('livebookPassword'), resourceGroup().id))]"
                },
                {
                  "name": "LIVEBOOK_IP",
                  "value": "0.0.0.0"
                },
                {
                  "name": "LIVEBOOK_PORT",
                  "value": "[variables('containerConfig').livebookPort]"
                },
                {
                  "name": "MIX_INSTALL_DIR",
                  "value": "[variables('containerConfig').mountPoints.mixcache]"
                },
                {
                  "name": "LIVEBOOK_ROOT_PATH",
                  "value": "[variables('containerConfig').mountPoints.data]"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 2,
                  "memoryInGB": 1,
                  "gpu": {
                    "count": 1,
                    "sku": "V100"
                  }
                }
              },
              "ports": [
                {
                  "protocol": "TCP",
                  "port": "[variables('containerConfig').livebookPort]"
                }
              ],
              "volumeMounts": [
                {
                  "name": "mixcache",
                  "mountPath": "[variables('containerConfig').mountPoints.mixcache]",
                  "readOnly": false
                },
                {
                  "name": "data",
                  "mountPath": "[variables('containerConfig').mountPoints.data]",
                  "readOnly": false
                }
              ]
            }
          }
        ],
        "ipAddress": {
          "type": "Public",
          "ports": [
            {
              "protocol": "TCP",
              "port": "[variables('containerConfig').livebookPort]"
            }
          ]
        },
        "volumes": [
          {
            "name": "mixcache",
            "azureFile": {
              "readOnly": false,
              "shareName": "[variables('containerConfig').shareNames.mixcache]",
              "storageAccountName": "[format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().name))]",
              "storageAccountKey": "[listKeys(format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().name)), '2020-08-01-preview').keys[0].value]"
            }
          },
          {
            "name": "data",
            "azureFile": {
              "readOnly": false,
              "shareName": "[variables('containerConfig').shareNames.data]",
              "storageAccountName": "[format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().name))]",
              "storageAccountKey": "[listKeys(format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().name)), '2020-08-01-preview').keys[0].value]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', split(format('{0}/default/{1}', format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().name)), variables('containerConfig').shareNames.data), '/')[0], split(format('{0}/default/{1}', format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().name)), variables('containerConfig').shareNames.data), '/')[1], split(format('{0}/default/{1}', format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().name)), variables('containerConfig').shareNames.data), '/')[2])]",
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', split(format('{0}/default/{1}', format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().name)), variables('containerConfig').shareNames.mixcache), '/')[0], split(format('{0}/default/{1}', format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().name)), variables('containerConfig').shareNames.mixcache), '/')[1], split(format('{0}/default/{1}', format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().name)), variables('containerConfig').shareNames.mixcache), '/')[2])]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}{1}', parameters('prefix'), uniqueString(resourceGroup().name)))]"
      ]
    }
  ],
  "outputs": {
    "containerIpv4Address": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups', format('{0}-group', parameters('prefix')))).ipAddress.ip]"
    }
  }
}